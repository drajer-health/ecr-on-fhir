{"resourceType":"CodeSystem","id":"v3-ActRelationshipCheckpoint","language":"en","text":{"status":"generated","div":"<div xml:lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\"><p><b>Properties</b></p><table class=\"grid\"><tr><td><b>Code</b></td><td><b>URL</b></td><td><b>Type</b></td><td><b>Description</b></td></tr><tr><td>Specializes</td><td/><td>Coding</td><td>The child code is a more narrow version of the concept represented by the parent code.  I.e. Every child concept is also a valid parent concept.  Used to allow determination of subsumption.  Must be transitive, irreflexive, antisymmetric.</td></tr><tr><td>Generalizes</td><td/><td>Coding</td><td>Inverse of Specializes.  Only included as a derived relationship.</td></tr><tr><td>internalId</td><td>http://terminology.hl7.org/CodeSystem/utg-concept-properties#v3-internal-id</td><td>code</td><td>The internal identifier for the concept in the HL7 Access database repository.</td></tr><tr><td>status</td><td>http://hl7.org/fhir/concept-properties#status</td><td>code</td><td>Designation of a concept's state. Normally is not populated unless the state is retired.</td></tr></table><p>This code system http://terminology.hl7.org/CodeSystem/v3-ActRelationshipCheckpoint defines the following codes:</p><table class=\"codes\"><tr><td style=\"white-space:nowrap\"><b>Code</b></td><td><b>Display</b></td><td><b>Definition</b></td><td><b>internalId</b></td><td><b>status</b></td></tr><tr><td style=\"white-space:nowrap\">B<a name=\"v3-ActRelationshipCheckpoint-B\"> </a></td><td>beginning</td><td>Condition is tested every time before execution of the service (WHILE condition DO service).</td><td>10351</td><td>active</td></tr><tr><td style=\"white-space:nowrap\">E<a name=\"v3-ActRelationshipCheckpoint-E\"> </a></td><td>end</td><td>Condition is tested at the end of a repeated service execution. The service is repeated only if the condition is true (DO service WHILE condition).</td><td>10352</td><td>active</td></tr><tr><td style=\"white-space:nowrap\">S<a name=\"v3-ActRelationshipCheckpoint-S\"> </a></td><td>entry</td><td>Condition is tested once before the service is executed (IF condition THEN service).</td><td>10350</td><td>active</td></tr><tr><td style=\"white-space:nowrap\">T<a name=\"v3-ActRelationshipCheckpoint-T\"> </a></td><td>through</td><td>Condition must be true throughout the execution and the service is interrupted (asynchronously) as soon as the condition turns false (asynchronous WHILE loop). The service must be interruptible.</td><td>10353</td><td>active</td></tr><tr><td style=\"white-space:nowrap\">X<a name=\"v3-ActRelationshipCheckpoint-X\"> </a></td><td>exit</td><td>Condition is a loop checkpoint, i.e. it is a step of an activity plan and, if negative causes the containing loop to exit.</td><td>10354</td><td>active</td></tr></table></div>"},"url":"http://terminology.hl7.org/CodeSystem/v3-ActRelationshipCheckpoint","identifier":[{"system":"urn:ietf:rfc:3986","value":"urn:oid:2.16.840.1.113883.5.10"}],"version":"2.1.0","name":"ActRelationshipCheckpoint","title":"ActRelationshipCheckpoint","status":"active","date":"2019-03-20","publisher":"Health Level 7","contact":[{"name":"Health Level Seven"}],"caseSensitive":true,"hierarchyMeaning":"is-a","content":"complete","property":[{"extension":[{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-symmetry","valueCode":"antisymmetric"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-transitivity","valueCode":"transitive"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-reflexivity","valueCode":"irreflexive"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-isNavigable","valueBoolean":true},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-relationshipKind","valueCode":"Specializes"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-inverseName","valueString":"Generalizes"}],"code":"Specializes","description":"The child code is a more narrow version of the concept represented by the parent code.  I.e. Every child concept is also a valid parent concept.  Used to allow determination of subsumption.  Must be transitive, irreflexive, antisymmetric.","type":"Coding"},{"extension":[{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-symmetry","valueCode":"antisymmetric"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-transitivity","valueCode":"transitive"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-reflexivity","valueCode":"irreflexive"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-isNavigable","valueBoolean":true},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-relationshipKind","valueCode":"Generalizes"},{"url":"http://terminology.hl7.org/StructureDefinition/ext-mif-relationship-inverseName","valueString":"Specializes"}],"code":"Generalizes","description":"Inverse of Specializes.  Only included as a derived relationship.","type":"Coding"},{"code":"internalId","uri":"http://terminology.hl7.org/CodeSystem/utg-concept-properties#v3-internal-id","description":"The internal identifier for the concept in the HL7 Access database repository.","type":"code"},{"code":"status","uri":"http://hl7.org/fhir/concept-properties#status","description":"Designation of a concept's state. Normally is not populated unless the state is retired.","type":"code"}],"concept":[{"code":"B","display":"beginning","definition":"Condition is tested every time before execution of the service (WHILE condition DO service).","property":[{"code":"status","valueCode":"active"},{"code":"internalId","valueCode":"10351"}]},{"code":"E","display":"end","definition":"Condition is tested at the end of a repeated service execution. The service is repeated only if the condition is true (DO service WHILE condition).","property":[{"code":"status","valueCode":"active"},{"code":"internalId","valueCode":"10352"}]},{"code":"S","display":"entry","definition":"Condition is tested once before the service is executed (IF condition THEN service).","property":[{"code":"status","valueCode":"active"},{"code":"internalId","valueCode":"10350"}]},{"code":"T","display":"through","definition":"Condition must be true throughout the execution and the service is interrupted (asynchronously) as soon as the condition turns false (asynchronous WHILE loop). The service must be interruptible.","property":[{"code":"status","valueCode":"active"},{"code":"internalId","valueCode":"10353"}]},{"code":"X","display":"exit","definition":"Condition is a loop checkpoint, i.e. it is a step of an activity plan and, if negative causes the containing loop to exit.","property":[{"code":"status","valueCode":"active"},{"code":"internalId","valueCode":"10354"}]}]}